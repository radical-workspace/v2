name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12, 3.11]

    # ðŸ‘‡ Add test-friendly env so no HTTPS redirect & predictable settings
    env:
      DJANGO_SETTINGS_MODULE: wolvcapital.settings
      DEBUG: "1"                # disable prod security in tests
      SECRET_KEY: "ci-test-key" # any non-empty value is fine for tests
      PYTHONWARNINGS: default

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt','**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      # Optional: avoid staticfiles warning
      - name: Prepare staticfiles dir
        run: mkdir -p staticfiles

      - name: Lint (Ruff)
        run: |
          if python - <<'PY'
import importlib, sys
sys.exit(0 if importlib.util.find_spec('ruff') else 1)
PY
          then
            python -m ruff check .
          else
            echo "ruff not installed; skipping lint"
          fi

      - name: Type check (mypy)
        run: |
          if python - <<'PY'
import importlib, sys
sys.exit(0 if importlib.util.find_spec('mypy') else 1)
PY
          then
            python -m mypy || true
          else
            echo "mypy not installed; skipping type check"
          fi

      - name: Django system check
        run: python manage.py check

      - name: Run tests and capture output
        run: |
          set -o pipefail
          python -u manage.py test -v 2 2>&1 | tee test-output.txt

      - name: Upload test output
        uses: actions/upload-artifact@v4
        with:
          name: test-output-${{ matrix.python-version }}
          path: test-output.txt
